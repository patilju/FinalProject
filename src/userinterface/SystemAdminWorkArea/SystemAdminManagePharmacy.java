/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Pharmacy.Pharmacy;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nupoorkorde
 */
public class SystemAdminManagePharmacy extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminManagePharmacy
     */
    private JPanel userProcessContainerSAMR;
    private EcoSystem ecosystem;
    private String user;
    
    public SystemAdminManagePharmacy(JPanel userProcessContainer, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainerSAMR = userProcessContainer;
        this.ecosystem = ecosystem;
        this.user = user;
        SystemAMPNameText.setEnabled(false);
        SystemAMPAddressText.setEnabled(false);

        SystemAMPSubmitButton.setEnabled(false);
        SystemAMPDeleteButton.setEnabled(false);
        SystemAMPViewButton.setEnabled(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SystemAMPDeleteButton = new javax.swing.JButton();
        SystemAMPCreateButton = new javax.swing.JButton();
        SystemAMPNameText = new javax.swing.JTextField();
        SystemAMPAddressText = new javax.swing.JTextField();
        SystemAMPNameLabel = new javax.swing.JLabel();
        SystemAMPAddressLabel = new javax.swing.JLabel();
        SystemAMPSubmitButton = new javax.swing.JButton();
        SystemAMPViewButton = new javax.swing.JButton();
        SystemAMPBackButton = new javax.swing.JButton();
        SystemAMPLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SystemAMPTable = new javax.swing.JTable();
        SystemAMPSeparator = new javax.swing.JSeparator();
        SystemAMPLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        SystemAMPDeleteButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SystemAMPDeleteButton.setText("Delete Pharmacy");
        SystemAMPDeleteButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SystemAMPDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMPDeleteButtonActionPerformed(evt);
            }
        });
        add(SystemAMPDeleteButton);
        SystemAMPDeleteButton.setBounds(200, 150, 120, 44);

        SystemAMPCreateButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SystemAMPCreateButton.setText("Create Pharmacy ");
        SystemAMPCreateButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SystemAMPCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMPCreateButtonActionPerformed(evt);
            }
        });
        add(SystemAMPCreateButton);
        SystemAMPCreateButton.setBounds(350, 210, 120, 43);

        SystemAMPNameText.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        SystemAMPNameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(SystemAMPNameText);
        SystemAMPNameText.setBounds(210, 420, 228, 16);

        SystemAMPAddressText.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        SystemAMPAddressText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SystemAMPAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMPAddressTextActionPerformed(evt);
            }
        });
        add(SystemAMPAddressText);
        SystemAMPAddressText.setBounds(210, 470, 228, 16);

        SystemAMPNameLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        SystemAMPNameLabel.setText("Pharmacy Name:");
        add(SystemAMPNameLabel);
        SystemAMPNameLabel.setBounds(80, 420, 144, 18);

        SystemAMPAddressLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        SystemAMPAddressLabel.setText("Address:");
        add(SystemAMPAddressLabel);
        SystemAMPAddressLabel.setBounds(80, 470, 144, 14);

        SystemAMPSubmitButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SystemAMPSubmitButton.setText("Submit");
        SystemAMPSubmitButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SystemAMPSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMPSubmitButtonActionPerformed(evt);
            }
        });
        add(SystemAMPSubmitButton);
        SystemAMPSubmitButton.setBounds(200, 530, 150, 30);

        SystemAMPViewButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SystemAMPViewButton.setText("View Pharmacy");
        SystemAMPViewButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SystemAMPViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMPViewButtonActionPerformed(evt);
            }
        });
        add(SystemAMPViewButton);
        SystemAMPViewButton.setBounds(70, 90, 110, 45);

        SystemAMPBackButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SystemAMPBackButton.setText("< Back");
        SystemAMPBackButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SystemAMPBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMPBackButtonActionPerformed(evt);
            }
        });
        add(SystemAMPBackButton);
        SystemAMPBackButton.setBounds(10, 20, 80, 30);

        SystemAMPLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        SystemAMPLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SystemAMPLabel1.setText("Manage Pharmacy");
        add(SystemAMPLabel1);
        SystemAMPLabel1.setBounds(270, 10, 445, 29);

        SystemAMPTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        SystemAMPTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No.", "Pharmacy Name", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SystemAMPTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SystemAMPTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SystemAMPTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 300, 477, 95);

        SystemAMPSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(SystemAMPSeparator);
        SystemAMPSeparator.setBounds(161, 11, 11, 293);

        SystemAMPLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/shutterstock_1381281389.jpg"))); // NOI18N
        add(SystemAMPLabel);
        SystemAMPLabel.setBounds(0, 0, 970, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void SystemAMPDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMPDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowSAMR = SystemAMPTable.getSelectedRow();
        if (selectedRowSAMR >= 0)
        {
            Pharmacy selectedPharmacy = (Pharmacy) SystemAMPTable.getValueAt(selectedRowSAMR, 1);
            ecosystem.getPharmacyDirectory().deletePharmacy(selectedPharmacy);
            JOptionPane.showMessageDialog(null, "Pharmacy " + selectedPharmacy.getPharmacyName()+ " deleted successfully!");
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_SystemAMPDeleteButtonActionPerformed

    private void SystemAMPCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMPCreateButtonActionPerformed
        // TODO add your handling code here:
        SystemAMPCreateButton.setEnabled(false);
        SystemAMPNameText.setEnabled(true);
        SystemAMPAddressText.setEnabled(true);
        SystemAMPSubmitButton.setEnabled(true);
    }//GEN-LAST:event_SystemAMPCreateButtonActionPerformed

    private void SystemAMPAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMPAddressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SystemAMPAddressTextActionPerformed

    private void SystemAMPSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMPSubmitButtonActionPerformed
        // TODO add your handling code here:
        Pharmacy p = ecosystem.getPharmacyDirectory().createPharmacy(SystemAMPNameText.getText(), SystemAMPAddressText.getText());
        if(p == null)
        {
            JOptionPane.showMessageDialog(null,"Pharmacy " + SystemAMPNameText.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Pharmacy created successfully as " + p.getPharmacyName());
            SystemAMPCreateButton.setEnabled(true);
            SystemAMPNameText.setEnabled(false);
            SystemAMPAddressText.setEnabled(false);
            SystemAMPSubmitButton.setEnabled(false);
            SystemAMPNameText.setText("");
            SystemAMPAddressText.setText("");
        }
        populateTable();
    }//GEN-LAST:event_SystemAMPSubmitButtonActionPerformed

    private void SystemAMPViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMPViewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = SystemAMPTable.getSelectedRow();
        if (selectedRow >= 0)
        {
            Pharmacy selectedPharmacy = (Pharmacy) SystemAMPTable.getValueAt(selectedRow, 1);
            SystemManageEmployees fs = new SystemManageEmployees(userProcessContainerSAMR, selectedPharmacy, ecosystem);
            userProcessContainerSAMR.add("SysAdminManageEmployees", fs);
            CardLayout layout = (CardLayout) userProcessContainerSAMR.getLayout();
            layout.next(userProcessContainerSAMR);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_SystemAMPViewButtonActionPerformed

    private void SystemAMPBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMPBackButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainerSAMR.remove(this);
        Component[] componentArray = userProcessContainerSAMR.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel dwjp = (SystemAdminWorkAreaJPanel) component;
        //dwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainerSAMR.getLayout();
        layout.previous(userProcessContainerSAMR);
    }//GEN-LAST:event_SystemAMPBackButtonActionPerformed

    private void SystemAMPTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SystemAMPTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = SystemAMPTable.getSelectedRow();
        if (selectedRow >= 0)
        {
            SystemAMPDeleteButton.setEnabled(true);
            SystemAMPViewButton.setEnabled(true);
        }
    }//GEN-LAST:event_SystemAMPTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SystemAMPAddressLabel;
    private javax.swing.JTextField SystemAMPAddressText;
    private javax.swing.JButton SystemAMPBackButton;
    private javax.swing.JButton SystemAMPCreateButton;
    private javax.swing.JButton SystemAMPDeleteButton;
    private javax.swing.JLabel SystemAMPLabel;
    private javax.swing.JLabel SystemAMPLabel1;
    private javax.swing.JLabel SystemAMPNameLabel;
    private javax.swing.JTextField SystemAMPNameText;
    private javax.swing.JSeparator SystemAMPSeparator;
    private javax.swing.JButton SystemAMPSubmitButton;
    private javax.swing.JTable SystemAMPTable;
    private javax.swing.JButton SystemAMPViewButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel)SystemAMPTable.getModel();
        dtm.setRowCount(0);
        int count1 = 1;
        if(ecosystem.getPharmacyDirectory().getPharmacyList() != null)
        {
            for(Pharmacy p : ecosystem.getPharmacyDirectory().getPharmacyList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = p.getPharmacyId();
                row[1] = p;
                row[2] = p.getPharmacyAddress();
                dtm.addRow(row);
                count1++;
            }
        }
        else
        {
            SystemAMPTable.setEnabled(false);
        }
    }
}
