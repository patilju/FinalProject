/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
//import Business.Role.AdminRole;
import Business.Role.DeliveryManRole;
import Business.Role.SupplierDeliveryManRole;
import Business.Role.SupplierAdminRole;
import Business.Supplier.Supplier;
import Business.SupplierDeliveryMan.SupplierDeliveryMan;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nupoorkorde
 */
public class SystemAdminManageSupplierEmployee extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminManageSupplierEmployee
     */
     private JPanel userProcessContainer;
    private Supplier supplier;
        private String user;

    private EcoSystem ecosystem;
    public SystemAdminManageSupplierEmployee(JPanel userProcessContainer, Supplier supplier, EcoSystem ecosystem) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.supplier = supplier;
        this.ecosystem = ecosystem;
        SystemAMSEUsernameText.setEnabled(false);
        SystemAMSEPasswordText.setEnabled(false);
        SystemAMSEConfirmPasswordText.setEnabled(false);
        SystemAMSENameText.setEnabled(false);
        SystemAMSEPhoneNumberText.setEnabled(false);
        SystemAMSEAddressText.setEnabled(false);
        SystemAMSESubmitButton.setEnabled(false);
        SystemAMSEDeleteButton.setEnabled(false);
        SystemAMSEViewButton.setEnabled(false);
        SystemAMSERoleRadio2.setEnabled(false);
        SystemAMSERoleRadio1.setEnabled(false);
        populateSupplierEmpTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SystemAMSEBackButton = new javax.swing.JButton();
        SystemAMSEViewButton = new javax.swing.JButton();
        SystemAMSEDeleteButton = new javax.swing.JButton();
        SystemAMSECreateButton = new javax.swing.JButton();
        SystemAMSESubmitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SystemAMSETable = new javax.swing.JTable();
        SystemAMSELabel1 = new javax.swing.JLabel();
        SystemAMSEUsernameText = new javax.swing.JTextField();
        SystemAMSEPhoneNumberText = new javax.swing.JTextField();
        SystemAMSEPhoneNumberLabel = new javax.swing.JLabel();
        SystemAMSERoleRadio2 = new javax.swing.JRadioButton();
        SystemAMSEPasswordText = new javax.swing.JTextField();
        SystemAMSEConfirmPasswordText = new javax.swing.JTextField();
        SystemAMSEAddressLabel = new javax.swing.JLabel();
        SystemAMSEUsernameLabel = new javax.swing.JLabel();
        SystemAMSEAddressText = new javax.swing.JTextField();
        SystemAMSEPasswordLabel = new javax.swing.JLabel();
        SystemAMSERoleLabel = new javax.swing.JLabel();
        SystemAMSENameLabel = new javax.swing.JLabel();
        SystemAMSEConfirmPasswordLabel = new javax.swing.JLabel();
        SystemAMSERoleRadio1 = new javax.swing.JRadioButton();
        SystemAMSENameText = new javax.swing.JTextField();
        SystemAMSELabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        SystemAMSEBackButton.setText("Back");
        SystemAMSEBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSEBackButtonActionPerformed(evt);
            }
        });
        add(SystemAMSEBackButton);
        SystemAMSEBackButton.setBounds(20, 65, 84, 23);

        SystemAMSEViewButton.setText("View");
        SystemAMSEViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSEViewButtonActionPerformed(evt);
            }
        });
        add(SystemAMSEViewButton);
        SystemAMSEViewButton.setBounds(20, 112, 84, 23);

        SystemAMSEDeleteButton.setText("Delete");
        SystemAMSEDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSEDeleteButtonActionPerformed(evt);
            }
        });
        add(SystemAMSEDeleteButton);
        SystemAMSEDeleteButton.setBounds(20, 152, 84, 23);

        SystemAMSECreateButton.setText("Create");
        SystemAMSECreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSECreateButtonActionPerformed(evt);
            }
        });
        add(SystemAMSECreateButton);
        SystemAMSECreateButton.setBounds(20, 199, 84, 23);

        SystemAMSESubmitButton.setText("Submit");
        SystemAMSESubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSESubmitButtonActionPerformed(evt);
            }
        });
        add(SystemAMSESubmitButton);
        SystemAMSESubmitButton.setBounds(270, 610, 120, 40);

        SystemAMSETable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Employee NO", "Name", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SystemAMSETable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SystemAMSETableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SystemAMSETable);

        add(jScrollPane1);
        jScrollPane1.setBounds(148, 65, 800, 136);

        SystemAMSELabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        SystemAMSELabel1.setText("Manage Employee");
        add(SystemAMSELabel1);
        SystemAMSELabel1.setBounds(450, 10, 190, 29);
        add(SystemAMSEUsernameText);
        SystemAMSEUsernameText.setBounds(260, 220, 300, 27);
        add(SystemAMSEPhoneNumberText);
        SystemAMSEPhoneNumberText.setBounds(260, 400, 300, 27);

        SystemAMSEPhoneNumberLabel.setText("Phone Number:");
        add(SystemAMSEPhoneNumberLabel);
        SystemAMSEPhoneNumberLabel.setBounds(106, 402, 120, 16);

        SystemAMSERoleRadio2.setText("Delivery Man");
        SystemAMSERoleRadio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSERoleRadio2ActionPerformed(evt);
            }
        });
        add(SystemAMSERoleRadio2);
        SystemAMSERoleRadio2.setBounds(260, 540, 119, 21);
        add(SystemAMSEPasswordText);
        SystemAMSEPasswordText.setBounds(260, 270, 300, 22);
        add(SystemAMSEConfirmPasswordText);
        SystemAMSEConfirmPasswordText.setBounds(260, 310, 300, 28);

        SystemAMSEAddressLabel.setText("        Address:");
        add(SystemAMSEAddressLabel);
        SystemAMSEAddressLabel.setBounds(108, 447, 110, 16);

        SystemAMSEUsernameLabel.setText("Username: ");
        add(SystemAMSEUsernameLabel);
        SystemAMSEUsernameLabel.setBounds(150, 220, 100, 25);
        add(SystemAMSEAddressText);
        SystemAMSEAddressText.setBounds(260, 440, 300, 28);

        SystemAMSEPasswordLabel.setText("Password: ");
        add(SystemAMSEPasswordLabel);
        SystemAMSEPasswordLabel.setBounds(151, 266, 80, 25);

        SystemAMSERoleLabel.setText("      Role:");
        add(SystemAMSERoleLabel);
        SystemAMSERoleLabel.setBounds(145, 501, 70, 16);

        SystemAMSENameLabel.setText("     Name:");
        add(SystemAMSENameLabel);
        SystemAMSENameLabel.setBounds(143, 361, 80, 16);

        SystemAMSEConfirmPasswordLabel.setText("Confirm Password:");
        add(SystemAMSEConfirmPasswordLabel);
        SystemAMSEConfirmPasswordLabel.setBounds(94, 312, 140, 27);

        SystemAMSERoleRadio1.setText("Supplier Manager");
        SystemAMSERoleRadio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SystemAMSERoleRadio1ActionPerformed(evt);
            }
        });
        add(SystemAMSERoleRadio1);
        SystemAMSERoleRadio1.setBounds(260, 500, 116, 19);
        add(SystemAMSENameText);
        SystemAMSENameText.setBounds(260, 350, 300, 30);

        SystemAMSELabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/SystemManageEmployees.jpg"))); // NOI18N
        add(SystemAMSELabel);
        SystemAMSELabel.setBounds(0, 0, 1330, 800);
    }// </editor-fold>//GEN-END:initComponents

    private void SystemAMSERoleRadio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSERoleRadio2ActionPerformed
        // TODO add your handling code here:
        SystemAMSERoleRadio1.setSelected(false);
    }//GEN-LAST:event_SystemAMSERoleRadio2ActionPerformed

    private void SystemAMSERoleRadio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSERoleRadio1ActionPerformed
        // TODO add your handling code here:
        SystemAMSERoleRadio2.setSelected(false);
    }//GEN-LAST:event_SystemAMSERoleRadio1ActionPerformed

    private void SystemAMSEBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSEBackButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_SystemAMSEBackButtonActionPerformed

    private void SystemAMSESubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSESubmitButtonActionPerformed
        // TODO add your handling code here:
        if(validateThis())
        {

            Employee e = supplier.getEmployeeDirectory().createEmployee(SystemAMSENameText.getText(), SystemAMSEAddressText.getText(), SystemAMSEPhoneNumberText.getText());
            if(e == null)
            {
                JOptionPane.showMessageDialog(null,"Employee " + SystemAMSENameText.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            else
            {
                if(SystemAMSERoleRadio1.isSelected())
                {
                    UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(SystemAMSEUsernameText.getText(), SystemAMSEPasswordText.getText(), e, new SupplierAdminRole());
                    if(ua != null)
                    {
                        JOptionPane.showMessageDialog(null, "Manager account created successfully for " + e.getEmployeeName());
                    }
                    else
                    {
                        supplier.getEmployeeDirectory().deleteEmployee(e);
                        JOptionPane.showMessageDialog(null,"Username " + SystemAMSEUsernameText.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
                else
                {
                    UserAccount ua = ecosystem.getUserAccountDirectory().createUserAccount(SystemAMSEUsernameText.getText(), SystemAMSEPasswordText.getText(), e, new SupplierDeliveryManRole());
                    if(ua != null)
                    {
                        SupplierDeliveryMan sdm = supplier.getSupplierDeliveryManDirectory().createSupplierDeliveryMan(SystemAMSENameText.getText(), SystemAMSEAddressText.getText(), SystemAMSEPhoneNumberText.getText());
                        JOptionPane.showMessageDialog(null, "Delivery Man account created successfully for " + e.getEmployeeName());
                    }
                    else
                    {
                        supplier.getEmployeeDirectory().deleteEmployee(e);
                        JOptionPane.showMessageDialog(null,"Username " + SystemAMSEUsernameText.getText() + " already exists!", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }

                }
                SystemAMSECreateButton.setEnabled(true);
                SystemAMSEUsernameText.setText("");
                SystemAMSEUsernameText.setEnabled(false);
                SystemAMSEPasswordText.setText("");
                SystemAMSEPasswordText.setEnabled(false);
                SystemAMSEConfirmPasswordText.setText("");
                SystemAMSEConfirmPasswordText.setEnabled(false);
                SystemAMSENameText.setText("");
                SystemAMSENameText.setEnabled(false);
                SystemAMSEPhoneNumberText.setText("");
                SystemAMSEPhoneNumberText.setEnabled(false);
                SystemAMSEAddressText.setText("");
                SystemAMSEAddressText.setEnabled(false);
                SystemAMSESubmitButton.setEnabled(false);
                SystemAMSERoleRadio2.setSelected(false);
                SystemAMSERoleRadio2.setEnabled(false);
                SystemAMSERoleRadio1.setSelected(false);
                SystemAMSERoleRadio1.setEnabled(false);
            }
            populateSupplierEmpTable();
        }
        else
        {
            return;
        }
    }//GEN-LAST:event_SystemAMSESubmitButtonActionPerformed

    private void SystemAMSETableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SystemAMSETableMouseClicked
        // TODO add your handling code here:
        
        int selectedRow = SystemAMSETable.getSelectedRow();
        if (selectedRow >= 0)
        {
            SystemAMSEDeleteButton.setEnabled(true);
            SystemAMSEViewButton.setEnabled(true);
        }
    }//GEN-LAST:event_SystemAMSETableMouseClicked

    private void SystemAMSEViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSEViewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = SystemAMSETable.getSelectedRow();
        if (selectedRow >= 0)
        {
            Employee selectedEmployee = (Employee) SystemAMSETable.getValueAt(selectedRow, 1);
            SystemUpdateSupplierEmployee fs = new SystemUpdateSupplierEmployee(userProcessContainer, selectedEmployee, ecosystem);
            userProcessContainer.add("SysUpdateSupplierEmployee", fs);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_SystemAMSEViewButtonActionPerformed

    private void SystemAMSEDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSEDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = SystemAMSETable.getSelectedRow();
        if (selectedRow >= 0)
        {
            Employee selectedEmployee = (Employee) SystemAMSETable.getValueAt(selectedRow, 1);
            supplier.getEmployeeDirectory().deleteEmployee(selectedEmployee);
            JOptionPane.showMessageDialog(null, "Employee " + selectedEmployee.getEmployeeName()+ " deleted successfully!");
            populateSupplierEmpTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_SystemAMSEDeleteButtonActionPerformed

    private void SystemAMSECreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SystemAMSECreateButtonActionPerformed
        // TODO add your handling code here:
        SystemAMSECreateButton.setEnabled(false);
        SystemAMSEUsernameText.setEnabled(true);
        SystemAMSEPasswordText.setEnabled(true);
        SystemAMSEConfirmPasswordText.setEnabled(true);
        SystemAMSENameText.setEnabled(true);
        SystemAMSEPhoneNumberText.setEnabled(true);
        SystemAMSEAddressText.setEnabled(true);
        SystemAMSESubmitButton.setEnabled(true);
        SystemAMSERoleRadio2.setEnabled(true);
        SystemAMSERoleRadio1.setEnabled(true);
    }//GEN-LAST:event_SystemAMSECreateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SystemAMSEAddressLabel;
    private javax.swing.JTextField SystemAMSEAddressText;
    private javax.swing.JButton SystemAMSEBackButton;
    private javax.swing.JLabel SystemAMSEConfirmPasswordLabel;
    private javax.swing.JTextField SystemAMSEConfirmPasswordText;
    private javax.swing.JButton SystemAMSECreateButton;
    private javax.swing.JButton SystemAMSEDeleteButton;
    private javax.swing.JLabel SystemAMSELabel;
    private javax.swing.JLabel SystemAMSELabel1;
    private javax.swing.JLabel SystemAMSENameLabel;
    private javax.swing.JTextField SystemAMSENameText;
    private javax.swing.JLabel SystemAMSEPasswordLabel;
    private javax.swing.JTextField SystemAMSEPasswordText;
    private javax.swing.JLabel SystemAMSEPhoneNumberLabel;
    private javax.swing.JTextField SystemAMSEPhoneNumberText;
    private javax.swing.JLabel SystemAMSERoleLabel;
    private javax.swing.JRadioButton SystemAMSERoleRadio1;
    private javax.swing.JRadioButton SystemAMSERoleRadio2;
    private javax.swing.JButton SystemAMSESubmitButton;
    private javax.swing.JTable SystemAMSETable;
    private javax.swing.JLabel SystemAMSEUsernameLabel;
    private javax.swing.JTextField SystemAMSEUsernameText;
    private javax.swing.JButton SystemAMSEViewButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


private void populateSupplierEmpTable() {
        DefaultTableModel dtm = (DefaultTableModel)SystemAMSETable.getModel();
        dtm.setRowCount(0);
        if(supplier.getEmployeeDirectory().getEmployeeList() != null)
        {
            for(Employee e : supplier.getEmployeeDirectory().getEmployeeList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0]= e.getEmployeeId();
                row[1]= e;
                UserAccount ua = ecosystem.getUserAccountDirectory().findEmployee(e);
                row[2] = ua.getRole().toString().substring(14).replace("Role", "");
                dtm.addRow(row);
            }
        }
        if(dtm.getRowCount() == 0)
            {
                SystemAMSEDeleteButton.setEnabled(false);
                SystemAMSEViewButton.setEnabled(false);
            }
    }

    private boolean validateThis() {
        String regex = "\\d{10}";
        if(("".equals(SystemAMSEUsernameText.getText())) || ("".equals(SystemAMSEPasswordText.getText())) || ("".equals(SystemAMSEConfirmPasswordText.getText())) 
                || ("".equals(SystemAMSENameText.getText())) || ("".equals(SystemAMSEPhoneNumberText.getText())) || ("".equals(SystemAMSEAddressText.getText()))
                || ((SystemAMSERoleRadio2.isEnabled() == false) && (SystemAMSERoleRadio1.isEnabled() == false)))
        {
            JOptionPane.showMessageDialog(null,"Please fill all details!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!(SystemAMSEPasswordText.getText().equals(SystemAMSEConfirmPasswordText.getText())))
        {
            JOptionPane.showMessageDialog(null,"Passwords do not match!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if(!(SystemAMSEPhoneNumberText.getText().matches(regex)))
        {
            JOptionPane.showMessageDialog(null,"Phone number must have only 10 digits!", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else
        {
            return true;
        }
    }
}


