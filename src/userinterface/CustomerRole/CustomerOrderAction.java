/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.MedicineItems.MedicineItem;
import Business.Orders.Orders;
import Business.Pharmacy.Pharmacy;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author juile
 */
public class CustomerOrderAction extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderAction
     */
    JPanel userProcessContainer;
    Customer customer;
    Pharmacy pharma;
    Orders orders;
    int totalAmount = 0;
    
    ArrayList<MedicineItem> cart = new ArrayList<MedicineItem>();
    
    public CustomerOrderAction(JPanel userProcessContainer, Customer customer, Pharmacy pharmacy) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customer = customer;
        this.pharma = pharmacy;
        CustomerPharmacyNameLabel.setText("Pharmacy: " +this.pharma.getPharmacyName());
        populateMedicine(); 
        populateOrder();
        if(COAOrderTable.getRowCount() <= 0)
        {
            btnOrder.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CustomerPharmacyNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        COAOrderTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        MedicineTable = new javax.swing.JTable();
        AddMedicineItemButton = new javax.swing.JButton();
        COATotalAmountLabel = new javax.swing.JLabel();
        COAOrderTotalAmountText = new javax.swing.JTextField();
        COADeleteItemButton = new javax.swing.JButton();
        btnOrder = new javax.swing.JButton();
        COABackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 1000));
        setLayout(null);

        CustomerPharmacyNameLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        CustomerPharmacyNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CustomerPharmacyNameLabel.setText("<value>");
        add(CustomerPharmacyNameLabel);
        CustomerPharmacyNameLabel.setBounds(30, 0, 530, 40);

        COAOrderTable.setBackground(new java.awt.Color(255, 204, 204));
        COAOrderTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        COAOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Medicine Name", "Medicine Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(COAOrderTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(40, 610, 1250, 130);

        MedicineTable.setBackground(new java.awt.Color(255, 204, 204));
        MedicineTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Id", "Medicine Name", "Medicine Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MedicineTable.setSelectionForeground(new java.awt.Color(102, 204, 255));
        MedicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(MedicineTable);
        if (MedicineTable.getColumnModel().getColumnCount() > 0) {
            MedicineTable.getColumnModel().getColumn(2).setHeaderValue("Medicine Price");
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(40, 60, 1250, 210);

        AddMedicineItemButton.setBackground(new java.awt.Color(0, 0, 0));
        AddMedicineItemButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        AddMedicineItemButton.setForeground(new java.awt.Color(255, 255, 255));
        AddMedicineItemButton.setText("Add Item to Order");
        AddMedicineItemButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddMedicineItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMedicineItemButtonActionPerformed(evt);
            }
        });
        add(AddMedicineItemButton);
        AddMedicineItemButton.setBounds(40, 290, 230, 37);

        COATotalAmountLabel.setBackground(new java.awt.Color(255, 255, 255));
        COATotalAmountLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        COATotalAmountLabel.setText("Total Amount:");
        add(COATotalAmountLabel);
        COATotalAmountLabel.setBounds(500, 750, 140, 40);

        COAOrderTotalAmountText.setEditable(false);
        COAOrderTotalAmountText.setBackground(new java.awt.Color(204, 204, 204));
        COAOrderTotalAmountText.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        COAOrderTotalAmountText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        COAOrderTotalAmountText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COAOrderTotalAmountTextActionPerformed(evt);
            }
        });
        add(COAOrderTotalAmountText);
        COAOrderTotalAmountText.setBounds(640, 750, 220, 40);

        COADeleteItemButton.setBackground(new java.awt.Color(0, 0, 0));
        COADeleteItemButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        COADeleteItemButton.setForeground(new java.awt.Color(255, 255, 255));
        COADeleteItemButton.setText("Delete Item");
        COADeleteItemButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        COADeleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COADeleteItemButtonActionPerformed(evt);
            }
        });
        add(COADeleteItemButton);
        COADeleteItemButton.setBounds(40, 750, 160, 40);

        btnOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnOrder.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnOrder.setText("Confirm Order");
        btnOrder.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        add(btnOrder);
        btnOrder.setBounds(1130, 750, 159, 40);

        COABackButton.setBackground(new java.awt.Color(0, 0, 0));
        COABackButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        COABackButton.setForeground(new java.awt.Color(255, 255, 255));
        COABackButton.setText("< Back");
        COABackButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        COABackButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                COABackButtonFocusLost(evt);
            }
        });
        COABackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COABackButtonActionPerformed(evt);
            }
        });
        add(COABackButton);
        COABackButton.setBounds(40, 360, 130, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/customer2nd.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setToolTipText("");
        add(jLabel1);
        jLabel1.setBounds(20, 0, 1290, 840);
    }// </editor-fold>//GEN-END:initComponents

    private void MedicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = MedicineTable.getSelectedRow();
        if (selectedRow >= 0)
        {
            AddMedicineItemButton.setEnabled(true);
        }
    }//GEN-LAST:event_MedicineTableMouseClicked

    private void AddMedicineItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMedicineItemButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = MedicineTable.getSelectedRow();
        if (selectedRow >= 0)
        {
            MedicineItem mi2 = (MedicineItem) MedicineTable.getValueAt(selectedRow, 1);
           
            cart.add(mi2);
            JOptionPane.showMessageDialog(null, "Medicine Item " + mi2.getMedicineName()+ " added to cart successfully!");
            totalAmount = totalAmount + mi2.getMedicinePrice();
            populateOrder();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_AddMedicineItemButtonActionPerformed

    private void COADeleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COADeleteItemButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow1 = COAOrderTable.getSelectedRow();
        if (selectedRow1 >= 0)
        {
            MedicineItem mi1 = (MedicineItem) COAOrderTable.getValueAt(selectedRow1, 1);
            //order.deleteFoodItem(fi);
            cart.remove(mi1);
            JOptionPane.showMessageDialog(null, "Medicine Item " + mi1.getMedicineName()+ " deleted from cart successfully!");
            totalAmount = totalAmount - mi1.getMedicinePrice();
            populateOrder();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

    }//GEN-LAST:event_COADeleteItemButtonActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        orders = pharma.getOrderDirectory().createNewOrder(customer);
        for(MedicineItem mo : cart)
        {
            orders.addItem(mo);
        }
        orders.calculateTotalAmount();
        JOptionPane.showMessageDialog(null, "Thank you for your order! Order of " + orders.getMedicineItemList().size() + " medicine item(s) for amount $" + orders.getTotalAmount() + " is placed successfully!");
    }//GEN-LAST:event_btnOrderActionPerformed

    private void COABackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COABackButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_COABackButtonActionPerformed

    private void COABackButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_COABackButtonFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_COABackButtonFocusLost

    private void COAOrderTotalAmountTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COAOrderTotalAmountTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COAOrderTotalAmountTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMedicineItemButton;
    private javax.swing.JButton COABackButton;
    private javax.swing.JButton COADeleteItemButton;
    private javax.swing.JTable COAOrderTable;
    private javax.swing.JTextField COAOrderTotalAmountText;
    private javax.swing.JLabel COATotalAmountLabel;
    private javax.swing.JLabel CustomerPharmacyNameLabel;
    private javax.swing.JTable MedicineTable;
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void populateMedicine() {
        DefaultTableModel dtm = (DefaultTableModel)MedicineTable.getModel();
        dtm.setRowCount(0);
        if(pharma.getMedicineCatalog().getMedicineItemList() != null)
        {
            for(MedicineItem mi : pharma.getMedicineCatalog().getMedicineItemList())
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = mi.getMedicineId();
                row[1] = mi;
                row[2] = mi.getMedicinePrice();
                dtm.addRow(row);
            }
        }
        if(dtm.getRowCount() == 0)
            {
                AddMedicineItemButton.setEnabled(false);
                COADeleteItemButton.setEnabled(false);
            }
    }

    private void populateOrder() {
        DefaultTableModel dtm = (DefaultTableModel)COAOrderTable.getModel();
        dtm.setRowCount(0);
        if(cart != null)
        {
            COADeleteItemButton.setEnabled(true);
            btnOrder.setEnabled(true);
            int count = 1;
            for(MedicineItem mi3 : cart)
            {
                Object[] row = new Object[dtm.getColumnCount()];
                row[0] = count;
                row[1] = mi3;
                row[2] =  mi3.getMedicinePrice();
                dtm.addRow(row);
                count++;
            }
            COAOrderTotalAmountText.setText(Integer.toString(totalAmount));
        }
        if(COAOrderTable.getRowCount() <= 0)
        {
            btnOrder.setEnabled(false);
            COADeleteItemButton.setEnabled(false);
        }
    }
}
